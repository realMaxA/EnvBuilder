#Использовать fs
#Использовать json
#Использовать logos


Перем Лог;


Процедура НастроитьКоманду(Знач Команда, Знач Парсер) Экспорт

	Парсер.ДобавитьПозиционныйПараметрКоманды(Команда, "ИмяОкружения", "Имя окружения для развертывания. Если не указано, то разворачиваются все окружения.");
	Парсер.ДобавитьИменованныйПараметрКоманды(Команда, "--destination", "Каталог развертывания окружений");
	Парсер.ДобавитьИменованныйПараметрКоманды(Команда, "--config", "Конфигурационный файл окружений");

КонецПроцедуры // НастроитьКоманду

Функция ВыполнитьКоманду(Знач ПараметрыКоманды, Знач Приложение) Экспорт
	
	Лог = Приложение.ПолучитьЛог();
	Лог.УстановитьУровень(УровниЛога.Отладка);
	
	ИмяРазвертываемогоОкружения = ПараметрыКоманды["ИмяОкружения"];
	ИмяФайлаНастроек            = ПараметрыКоманды["--config"];

	Лог.Отладка("Конфигурационный файл: %1", ИмяФайлаНастроек);
	
	Если ФС.Существует(ИмяФайлаНастроек) Тогда
		Если ФС.КаталогСуществует(ИмяФайлаНастроек) Тогда
			Приложение.ЗавершитьРаботуПриложенияСОшибкой("Не найден конфигурационный файл", 1);
		КонецЕсли;
	Иначе
		Приложение.ЗавершитьРаботуПриложенияСОшибкой("Не найден конфигурационный файл", 1);
	КонецЕсли;
	
	ЧтениеСодержимогоКонфига = Новый ЧтениеТекста(ИмяФайлаНастроек, КодировкаТекста.UTF8);
	СодержимоеКонфига = ЧтениеСодержимогоКонфига.Прочитать();
	ЧтениеСодержимогоКонфига.Закрыть();

	Парсер = Новый ПарсерJSON();
	
	Конфиг = Парсер.ПрочитатьJSON(СодержимоеКонфига);
	
	СписокОкружений = Конфиг["environments"];
	
	ОкруженияДляРазвертывания = Новый Массив;
	Если ПустаяСтрока(ИмяРазвертываемогоОкружения) Тогда
		Для каждого ДанныеОкружения Из СписокОкружений Цикл
			ОкруженияДляРазвертывания.Добавить(ДанныеОкружения.Ключ);
		КонецЦикла;
	Иначе
		Окружение = СписокОкружений.Получить(ИмяРазвертываемогоОкружения);
		Если Окружение = Неопределено Тогда
			Приложение.ЗавершитьРаботуПриложенияСОшибкой("Не найдено окружение для развертывания");
		КонецЕсли;

		ОкруженияДляРазвертывания.Добавить(Окружение);
	КонецЕсли;

	Для каждого Окружение Из ОкруженияДляРазвертывания Цикл
		РазвернутьОкружение(Окружение);
	КонецЦикла;

	// При успешном выполнении возвращает код успеха
	Возврат Приложение.РезультатыКоманд().Успех;
	
КонецФункции // ВыполнитьКоманду

Процедура РазвернутьОкружение(Знач Окружение)
	НастройкаОскрипт            = Окружение.Получить("oscript");
	НастройкаПрочихИнструментов = Окружение.Получить("others");

	Если ЗначениеЗаполнено(НастройкаОскрипт) Тогда
		РазвернутьОскрипт(НастройкаОскрипт);
	КонецЕсли;

	Если ЗначениеЗаполнено(НастройкаПрочихИнструментов) Тогда
		Для каждого НастройкаСтороннегоИнструмента Из НастройкаПрочихИнструментов Цикл
			ИмяИнструмента       = НастройкаСтороннегоИнструмента.Ключ;
			НастройкиИнструмента = НастройкаСтороннегоИнструмента.Значение;

			РазвернутьСтороннийИнструмент(ИмяИнструмента, НастройкиИнструмента);
		КонецЦикла;
	КонецЕсли;
КонецПроцедуры

Процедура РазвернутьОскрипт(Знач Настройка)
	ВерсияОскрипт = Настройка["version"];
	Если ЗначениеЗаполнено(ВерсияОскрипт) Тогда
		ВерсияОскрипт = СтрЗаменить(ВерсияОскрипт, ".", "_");
	Иначе
		КаталогРазмещения = "latest";
	КонецЕсли;

	АдресРесурса = СтрШаблон("http://oscript.io/downloads/%1/zip", КаталогРазмещения);

	// КопироватьФайл(АдресРесурса, "oo.zip");
КонецПроцедуры

Процедура РазвернутьСтороннийИнструмент(Знач Имя, Знач Настройка)
	
КонецПроцедуры
